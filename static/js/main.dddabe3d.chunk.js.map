{"version":3,"sources":["http-common.js","services/PokemonService.js","services/TypeService.js","contexts/Store.js","components/PokemonList/index.js","components/CartModal/index.js","components/CartModalSuccesso/index.js","components/Cart/index.js","components/PokemonSearchList/index.js","components/Footer/index.js","components/PokemonSearch/index.js","components/HeaderMenu/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","limit","offset","http","get","id","name","StoreContext","React","createContext","PokemonList","memo","props","useState","pokemon","setPokemon","btnPrevious","setBtnPrevious","btnNext","setBtnNext","title","setTitle","useParams","dispatch","useContext","useEffect","loadPokemon","a","PokemonService","response","TypeService","responseType","data","length","slice","results","previous","next","console","log","returnName","item","returnId","url","url_arr","split","returnPrice","toLocaleString","handleItem","price","type","handlePrevious","className","onClick","e","handlePreviousClick","icon","faAngleDoubleLeft","handleNext","handleNextClick","faAngleDoubleRight","preventDefault","query","query2","_limit","_offset","map","index","key","src","alt","faCartPlus","CartModal","itens","total","handleSuccess","tabIndex","role","data-dismiss","aria-label","aria-hidden","CartModalSucesso","Cart","state","products","cartRef","createRef","useRef","getTotalCart","Array","isArray","totalCart","reduce","parseFloat","replace","toFixed","handleReady","$","modal","handleRemoveItem","handleEmpty","ref","width","faTimes","faCartArrowDown","PokemonSearchList","keySearch","keyPokemonSearch","status","Footer","PokemonSearch","history","useHistory","search","setSearch","placeholder","value","onChange","target","onKeyDown","push","alert","faSearch","HeaderMenu","types","setTypes","loadTypes","to","Header","data-toggle","data-target","aria-controls","aria-expanded","App","initialState","localStorage","getItem","JSON","parse","removeItemOfCart","exist","find","i","pop","toast","setItem","stringify","reducer","useCallback","action","parseInt","warn","success","addToCart","Error","useReducer","Store","Provider","exact","path","component","position","autoClose","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dddabe3d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://pokeapi.co/api/v2\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nconst getAll = (limit, offset) => {\r\n    limit = limit ?? 12;\r\n    offset = offset ?? 0;\r\n\r\n    return http.get(`/pokemon/?limit=${limit}&offset=${offset}`);\r\n};\r\n\r\nconst get = (id) => {\r\n    return http.get(`/type/${id}`);\r\n};\r\n\r\nconst findByName = (name, limit, offset) => {\r\n    limit = limit ?? 20;\r\n    offset = offset ?? 0;\r\n\r\n    return http.get(`/pokemon/${name}?limit=${limit}&offset=${offset}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  findByName\r\n};","import http from \"../http-common\";\r\n\r\nconst getAll = (limit, offset) => {\r\n    limit = limit ?? 16;\r\n    offset = offset ?? 0;\r\n\r\n    return http.get(`/type/?limit=${limit}&offset=${offset}`);\r\n};\r\n\r\nconst get = (id) => {\r\n    return http.get(`/type/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get\r\n};","import React from 'react';\r\n\r\nconst StoreContext = React.createContext({});\r\n\r\nexport default StoreContext;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport PokemonService from '../../services/PokemonService';\r\nimport TypeService from '../../services/TypeService';\r\nimport './PokemonList.css';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport StoreContext from \"../../contexts/Store\";\r\n\r\nconst PokemonList = React.memo(props => {\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [btnPrevious, setBtnPrevious] = useState(null);\r\n  const [btnNext, setBtnNext] = useState(null);\r\n  const [title, setTitle] = useState('em destaque');\r\n  const { id } = useParams();\r\n\r\n  const { dispatch } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    loadPokemon(id, null, null);\r\n  }, [id]);\r\n\r\n  const loadPokemon = async (id, limit, offset) => {\r\n    try {      \r\n      if (id) {\r\n        let response = await PokemonService.get(id);\r\n        let responseType = await TypeService.get(id);\r\n    \r\n        if (response.data.pokemon.length > 20) {\r\n          response.data.pokemon = response.data.pokemon.slice(0, 20);\r\n        }\r\n    \r\n        setPokemon(response.data.pokemon);\r\n        setTitle(`${responseType.data.name}`);\r\n      } else {\r\n        let response = await PokemonService.getAll(limit, offset);\r\n  \r\n        setPokemon(response.data.results);\r\n        setBtnPrevious(response.data.previous);\r\n        setBtnNext(response.data.next);\r\n        setTitle('em destaque');\r\n      }\r\n  \r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const returnName = (item) => {\r\n    return item.name ?? item.pokemon.name;\r\n  }\r\n\r\n  const returnId = (item) => {\r\n    let url = null;\r\n\r\n    if (item.pokemon) {\r\n      url = item.pokemon.url;\r\n    } else {\r\n      url = item.url;\r\n    }\r\n\r\n    if (url) {\r\n      let url_arr = url.split(\"/\");\r\n      let id = url_arr[url_arr.length - 2];\r\n  \r\n      return id;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  const returnPrice = (item) => {\r\n    let price = returnId(item) * 10.99;\r\n\r\n    return price.toLocaleString('pt-BR');\r\n  }\r\n  \r\n  const handleItem = (item) => () => {\r\n    item.id = returnId(item);\r\n    item.name = returnName(item);\r\n    item.price = returnPrice(item);\r\n\r\n    dispatch({ type: 'addToCart', item});\r\n  }\r\n\r\n  const handlePrevious = () => {\r\n    if (btnPrevious) {\r\n      return (\r\n        <>\r\n          <button type=\"button\" \r\n                className=\"btn btn-outline-info btn-sm mr-1\"\r\n                onClick={e => handlePreviousClick(e)}><FontAwesomeIcon icon={faAngleDoubleLeft} /></button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (<></>);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (btnNext) {\r\n      return (\r\n        <>\r\n          <button type=\"button\" \r\n                className=\"btn btn-outline-info btn-sm ml-1\"\r\n                onClick={e => handleNextClick(e)}><FontAwesomeIcon icon={faAngleDoubleRight} /></button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (<></>);\r\n  };\r\n\r\n  const handlePreviousClick = (e) => {\r\n    e.preventDefault();\r\n    const query = btnPrevious.split('?');\r\n    const query2 = query[query.length - 1].split('&');\r\n\r\n    let limit = query2[1].split('=');\r\n    let offset = query2[0].split('=');\r\n    let _limit = limit[1];\r\n    let _offset = offset[1];\r\n    \r\n    loadPokemon(id, _limit, _offset);\r\n  }\r\n\r\n  const handleNextClick = (e) => {\r\n    e.preventDefault();\r\n    const query = btnNext.split('?');\r\n    const query2 = query[query.length - 1].split('&');\r\n    \r\n    let limit = query2[1].split('=');\r\n    let offset = query2[0].split('=');\r\n    let _limit = limit[1];\r\n    let _offset = offset[1];\r\n    \r\n    loadPokemon(id, _limit, _offset);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4>{title}</h4>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 center\">\r\n          {handlePrevious()}\r\n\r\n          {handleNext()}\r\n        </div>\r\n      </div>\r\n      <div className=\"list row center\">\r\n          {pokemon &&\r\n            pokemon.map((item, index) => (\r\n              <div className=\"col-md-3\" key={index}>\r\n                    <img className=\"card-img-top\"\r\n                      src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${returnId(item)}.png`}\r\n                      alt={returnName(item)} />\r\n                  <div className=\"card-body\">\r\n                    {returnName(item)}\r\n                    <br />\r\n                    <p>R$ {returnPrice(item)}</p>\r\n                    <button type=\"button\" name=\"addItem\" \r\n                          className=\"btn btn-success btn-sm\"\r\n                          onClick={handleItem(item)}><FontAwesomeIcon icon={faCartPlus} /> Comprar</button>\r\n                  </div>\r\n                \r\n                </div>                 \r\n            ))}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 center\">\r\n          {handlePrevious()}\r\n\r\n          {handleNext()}\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default PokemonList;\r\n","import React from 'react';\r\n\r\nconst CartModal = ({itens, total, handleSuccess}) => {\r\n    return (\r\n        <div id=\"cartModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Finalizar Compra</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>Você está comprando <b>{itens.length}</b> ite{(itens.length > 1) ? 'ns' : 'm'}.</p>\r\n                        <p>O valor da sua compra é <b>R$ {total}</b>.</p>\r\n                        <p>Para concluir clique no botão prosseguir.</p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Voltar</button>\r\n                        <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\" onClick={handleSuccess}>Prosseguir</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartModal;","import React from 'react';\r\n\r\nconst CartModalSucesso = ({itens, total}) => {\r\n    return (\r\n        <div id=\"cartModalSucesso\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Compra finalizada</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body center\">\r\n                        <h1>Parabéns!</h1>\r\n                        <p>Compra realizada.</p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartModalSucesso;","import React, { useContext, createRef, useRef } from 'react';\r\nimport StoreContext from '../../contexts/Store';\r\nimport CartModal from '../CartModal';\r\nimport $ from 'jquery';\r\nimport CartModalSucesso from '../CartModalSuccesso';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCartArrowDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Cart = () => {\r\n    const { state, dispatch } = useContext(StoreContext);\r\n\r\n    let pokemon = state.products;\r\n    \r\n    const cartRef = createRef();\r\n    useRef(() => {\r\n        pokemon = dispatch({ type: 'getProducts'});\r\n    }, [state.products]);\r\n\r\n    const getTotalCart = () => {\r\n        if (!Array.isArray(pokemon)) {\r\n            return 0.00;\r\n        }\r\n\r\n        let totalCart = pokemon.reduce((total, item, index) => {\r\n            return (parseFloat(item.price.replace('.','').replace(',','.')) + parseFloat(total)).toFixed(2);\r\n        }, 0.00);\r\n\r\n        return parseFloat(totalCart).toLocaleString('pt-BR');\r\n    };    \r\n\r\n    const cartFooter = () => {\r\n        if (pokemon.length > 0) {\r\n            return (\r\n                <div className=\"card-footer center\">\r\n                    <button type=\"button\" className=\"btn btn-info\" onClick={handleReady}>FINALIZAR</button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return '';\r\n        }\r\n    } \r\n\r\n    const emptyCart = () => {\r\n        if (pokemon.length > 0) {\r\n            return (\r\n                <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={handleEmpty}><FontAwesomeIcon icon={faCartArrowDown} /></button>\r\n            );\r\n        } else {\r\n            return '';\r\n        }\r\n    } \r\n\r\n    const handleReady = () => {\r\n        $('#cartModal').modal('toggle');\r\n    }\r\n\r\n    const handleSuccess = () => {\r\n        dispatch({ type: 'emptyCart'});\r\n        $('#cartModalSucesso').modal('toggle');\r\n    }\r\n\r\n    const handleRemoveItem = (item) => () => {\r\n        dispatch({ type: 'removeItemOfCart', item});\r\n    }\r\n\r\n    const handleEmpty = () => {\r\n        dispatch({ type: 'emptyCart'});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\" ref={cartRef}>\r\n                <div className=\"card-header center\">\r\n                    <h5 className=\"card-title mt-2\">CARRINHO</h5>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {pokemon \r\n                        && pokemon.map((item, index) => (\r\n                        <li className=\"list-group-item\" key={index}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-2\">\r\n                                    <img \r\n                                        width=\"50\"\r\n                                        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${item.id}.png`}\r\n                                        alt={item.name} />\r\n                                </div>\r\n                                <div className=\"col-md-5\">\r\n                                    {item.name}\r\n                                </div>\r\n                                <div className=\"col-md-5 right\">\r\n                                    R$ {item.price}\r\n                                    <button type=\"button\" \r\n                                             name=\"removeItem\" \r\n                                             className=\"ml-1 btn btn-sm btn-outline-danger\"\r\n                                            onClick={handleRemoveItem(item)}>\r\n                                        <FontAwesomeIcon icon={faTimes} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))}                   \r\n                </ul>\r\n                <div className=\"card-body row\">\r\n                    <div className=\"col-md-6\">Total: R$ {getTotalCart()}</div>\r\n                    <div className=\"col-md-6 right\">{emptyCart()}</div>\r\n                </div>\r\n                {cartFooter()}\r\n            </div>\r\n            <CartModal itens={pokemon} total={getTotalCart()} handleSuccess={handleSuccess} />\r\n            <CartModalSucesso />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cart;","\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport PokemonService from '../../services/PokemonService';\r\nimport './PokemonSearchList.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport StoreContext from \"../../contexts/Store\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PokemonSearchList = props => {\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [title, setTitle] = useState('Resultado para pesquisa');\r\n  const { keySearch } = useParams();\r\n\r\n  const { dispatch } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    loadPokemon(keySearch);\r\n  }, [keySearch]);\r\n\r\n  const loadPokemon = async (keyPokemonSearch) => {\r\n    setTitle(`Resultado da pesquisa para \"${keyPokemonSearch}\"`);\r\n\r\n    try {      \r\n      let response = await PokemonService.findByName(keyPokemonSearch);\r\n        \r\n      if (response.status === 404) {\r\n        setPokemon([]);\r\n      } else {\r\n        setPokemon([response.data]);\r\n      }    \r\n  \r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const returnPrice = (item) => {\r\n    let price = item.id * 10.99;\r\n\r\n    return price.toLocaleString('pt-BR');\r\n  }\r\n\r\n  const handleItem = (item) => () => {\r\n    item.price = returnPrice(item);\r\n\r\n    dispatch({ type: 'addToCart', item});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4>{title}</h4>\r\n\r\n      <div className=\"list row center\">\r\n            {pokemon &&\r\n              pokemon.map((item, index) => (\r\n                <div className=\"col-md-3\" key={index}>\r\n                    <img className=\"card-img-top\"\r\n                        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${item.id}.png`}\r\n                        alt={item.name} />\r\n                    <div className=\"card-body\">\r\n                      {item.name}\r\n                      <br />\r\n                      <p>R$ {returnPrice(item)}</p>\r\n                      <button type=\"button\" name=\"addItem\" \r\n                            className=\"btn btn-success btn-sm\"\r\n                            onClick={handleItem(item)}><FontAwesomeIcon icon={faCartPlus} /> Comprar</button>\r\n                    </div>\r\n                  </div>                  \r\n              ))}\r\n\r\n          { pokemon.length === 0 ? 'Nenhum resultado encontrado' : '' }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonSearchList;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <>\r\n            <footer className=\"footer\">\r\n                <div className=\"container\">\r\n                    <span className=\"text-muted\">\r\n                        Pokemon Store HC - Projeto desenvolvido para fins acadêmicos no programa Hiring Coders - Gama Academy\r\n                    </span>\r\n                </div>\r\n            </footer>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './PokemonSearch.css';\r\n\r\nconst PokemonSearch = () => {\r\n    const history = useHistory();\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    const handlePesquisa = () => {\r\n        if (search) {\r\n            history.push(`/search/${search}`);\r\n            setSearch('');\r\n            //window.location.reload();\r\n        } else {\r\n            alert('Informe um termo para realizar a pesquisa.');\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form className=\"form-inline mt-2 mt-md-0\">\r\n                <div className=\"form-group mb-2\">\r\n                    <input \r\n                        className=\"form-control mr-2\" \r\n                        name=\"pesquisar\"\r\n                        type=\"text\" \r\n                        placeholder=\"o que deseja encontrar?\" \r\n                        aria-label=\"Search\" \r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                        onKeyDown={handleKeyDown}\r\n                        />\r\n                </div>\r\n                <button className=\"btn btn-outline-success mb-2\" type=\"button\" onClick={handlePesquisa}>\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </button>            \r\n              </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonSearch;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TypeService from '../../services/TypeService';\r\n\r\nconst HeaderMenu = (props) => {\r\n    const [types, setTypes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadTypes();\r\n      }, []);\r\n    \r\n    const loadTypes = async () => {\r\n        try {      \r\n            let response = await TypeService.getAll();\r\n\r\n            setTypes(response.data.results);\r\n        \r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const returnId = (item) => {\r\n        let url = null;\r\n\r\n        if (item.pokemon) {\r\n            url = item.pokemon.url;\r\n        } else {\r\n            url = item.url;\r\n        }\r\n\r\n        if (url) {\r\n            let url_arr = url.split(\"/\");\r\n            let id = url_arr[url_arr.length - 2];\r\n        \r\n            return id;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            {types && types.map((item, index) => (\r\n                <li className=\"nav-item\" key={index}>\r\n                    <Link to={`/tipos/${returnId(item)}`} className=\"nav-link\">\r\n                        {item.name}\r\n                    </Link>\r\n                </li>                \r\n            ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport PokemonSearch from '../PokemonSearch';\r\nimport HeaderMenu from '../HeaderMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <>\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Pokemon Store HC</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                    <HeaderMenu />                \r\n                    <PokemonSearch />\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useReducer, useCallback } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport PokemonList from './components/PokemonList';\r\nimport Cart from './components/Cart';\r\nimport PokemonSearchList from './components/PokemonSearchList';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\n\r\nimport StoreContext from './contexts/Store';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n    let productsTmp = null;\r\n    if (localStorage.getItem('products') && localStorage.getItem('products').length > 0) {\r\n      productsTmp = JSON.parse(localStorage.getItem('products'));\r\n    } else {\r\n      productsTmp = [];\r\n    }   \r\n\r\n    let initialState = { products: productsTmp};\r\n\r\n    const addToCart = (item, products) => {\r\n      item.id = parseInt(item.id);\r\n      let exist = products.find(i => i.id === item.id);\r\n\r\n      if (!exist) {\r\n        products.push(item);\r\n        toast.success(\"Item adicionado ao carrinho.\");\r\n      } else {\r\n        toast.warn(\"Este item já se encontra no carrinho.\");\r\n      }\r\n\r\n      localStorage.setItem('products', JSON.stringify(products));\r\n\r\n      return products;\r\n    }\r\n\r\n    const getProducts = (list) => {\r\n        return list;\r\n    }\r\n\r\n    const removeItemOfCart = (item, products) => {\r\n      let exist = products.find(i => i.id === item.id);\r\n\r\n      if (exist) {\r\n        products.pop(exist);\r\n        toast(\"Item removido do carrinho.\");\r\n      }\r\n\r\n      localStorage.setItem('products', JSON.stringify(products));\r\n\r\n      return products;\r\n    };\r\n    \r\n    const reducer = useCallback((state, action) => {\r\n        switch (action.type) {\r\n            case \"addToCart\":\r\n              let products = addToCart(action.item, state.products);              \r\n              return { ...state, products };\r\n\r\n            case \"getProducts\":\r\n              return getProducts(state.products);\r\n\r\n            case \"emptyCart\":\r\n              toast(\"Todos os itens foram removidos do carrinho.\");\r\n              return { ...state, products: [] };\r\n\r\n            case \"removeItemOfCart\":\r\n              return { ...state, products: removeItemOfCart(action.item, state.products) };\r\n\r\n            default:\r\n              throw new Error();\r\n        }\r\n    }, []);\r\n\r\n    let [state, dispatch] = useReducer(reducer, initialState);\r\n    let value = { state, dispatch };\r\n\r\n  return (\r\n    <Router>\r\n      <StoreContext.Provider value={value}>\r\n      <div>\r\n        <Header />\r\n\r\n        <div className=\"container mt-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              <Switch>\r\n                <Route key=\"inicio\" exact path={[\"/\", \"/inicio\"]} component={PokemonList}/>\r\n                <Route key=\"tipos\" path=\"/tipos/:id\" component={PokemonList} />\r\n                <Route key=\"search\" path=\"/search/:keySearch\" component={PokemonSearchList} />\r\n              </Switch>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Cart />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      <ToastContainer position=\"bottom-right\" autoClose=\"2000\" />\r\n      </StoreContext.Provider>\r\n    </Router>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}